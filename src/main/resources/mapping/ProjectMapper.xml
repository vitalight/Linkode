<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linkode.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.linkode.pojo.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="posterId" jdbcType="INTEGER" property="posterId" />
    <result column="contractorId" jdbcType="INTEGER" property="contractorId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="requirement" jdbcType="VARCHAR" property="requirement" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="startDate" jdbcType="DATE" property="startDate" />
    <result column="endDate" jdbcType="DATE" property="endDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="money" jdbcType="INTEGER" property="money" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, posterId, contractorId, title, requirement, type, startDate, endDate, status, 
    money
  </sql>
  <select id="selectByExample" parameterType="com.linkode.pojo.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linkode.pojo.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linkode.pojo.Project">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project (id, posterId, contractorId, 
      title, requirement, type, 
      startDate, endDate, status, 
      money)
    values (#{id,jdbcType=INTEGER}, #{posterId,jdbcType=INTEGER}, #{contractorId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{requirement,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, #{status,jdbcType=VARCHAR}, 
      #{money,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.linkode.pojo.Project">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="posterId != null">
        posterId,
      </if>
      <if test="contractorId != null">
        contractorId,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="startDate != null">
        startDate,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="posterId != null">
        #{posterId,jdbcType=INTEGER},
      </if>
      <if test="contractorId != null">
        #{contractorId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linkode.pojo.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.posterId != null">
        posterId = #{record.posterId,jdbcType=INTEGER},
      </if>
      <if test="record.contractorId != null">
        contractorId = #{record.contractorId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        startDate = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        endDate = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set id = #{record.id,jdbcType=INTEGER},
      posterId = #{record.posterId,jdbcType=INTEGER},
      contractorId = #{record.contractorId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      requirement = #{record.requirement,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      startDate = #{record.startDate,jdbcType=DATE},
      endDate = #{record.endDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linkode.pojo.Project">
    update project
    <set>
      <if test="posterId != null">
        posterId = #{posterId,jdbcType=INTEGER},
      </if>
      <if test="contractorId != null">
        contractorId = #{contractorId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        startDate = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linkode.pojo.Project">
    update project
    set posterId = #{posterId,jdbcType=INTEGER},
      contractorId = #{contractorId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      requirement = #{requirement,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      startDate = #{startDate,jdbcType=DATE},
      endDate = #{endDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.linkode.pojo.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="posterId" jdbcType="INTEGER" property="posterid" />
    <result column="contractorId" jdbcType="INTEGER" property="contractorid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="requirement" jdbcType="VARCHAR" property="requirement" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="startDate" jdbcType="DATE" property="startdate" />
    <result column="endDate" jdbcType="DATE" property="enddate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="money" jdbcType="INTEGER" property="money" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, posterId, contractorId, title, requirement, type, startDate, endDate, status, 
    money
  </sql>
  <select id="selectByExample" parameterType="com.linkode.pojo.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linkode.pojo.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linkode.pojo.Project">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project (id, posterId, contractorId, 
      title, requirement, type, 
      startDate, endDate, status, 
      money)
    values (#{id,jdbcType=INTEGER}, #{posterid,jdbcType=INTEGER}, #{contractorid,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{requirement,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{startdate,jdbcType=DATE}, #{enddate,jdbcType=DATE}, #{status,jdbcType=VARCHAR}, 
      #{money,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.linkode.pojo.Project">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="posterid != null">
        posterId,
      </if>
      <if test="contractorid != null">
        contractorId,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="startdate != null">
        startDate,
      </if>
      <if test="enddate != null">
        endDate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="posterid != null">
        #{posterid,jdbcType=INTEGER},
      </if>
      <if test="contractorid != null">
        #{contractorid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linkode.pojo.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.posterid != null">
        posterId = #{record.posterid,jdbcType=INTEGER},
      </if>
      <if test="record.contractorid != null">
        contractorId = #{record.contractorid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.startdate != null">
        startDate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null">
        endDate = #{record.enddate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set id = #{record.id,jdbcType=INTEGER},
      posterId = #{record.posterid,jdbcType=INTEGER},
      contractorId = #{record.contractorid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      requirement = #{record.requirement,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      startDate = #{record.startdate,jdbcType=DATE},
      endDate = #{record.enddate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linkode.pojo.Project">
    update project
    <set>
      <if test="posterid != null">
        posterId = #{posterid,jdbcType=INTEGER},
      </if>
      <if test="contractorid != null">
        contractorId = #{contractorid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null">
        startDate = #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        endDate = #{enddate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linkode.pojo.Project">
    update project
    set posterId = #{posterid,jdbcType=INTEGER},
      contractorId = #{contractorid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      requirement = #{requirement,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      startDate = #{startdate,jdbcType=DATE},
      endDate = #{enddate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>